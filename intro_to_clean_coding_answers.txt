1. In your own words, explain what clean code is and why it is important.
	Clean code is having code that is readable and easily followed by anyone who has access to it. The code should be simple enough that it is easily maintained by other developers without heavy reliance on comments. 

2. Read this article about Toyota and their use of bad code. Although you may not yet understand all of the topics discussed, think about another commonly used object that relies on computers and explain what would happen if the code was not created to an acceptable standard.
	A product that relies on computers and code would be cash registers or any kind of payment transferring program. If the code was not created to an acceptable standard, the money exchanged would be incorrect and the company or customer could be giving unnecessary amounts. Customers could sue the company or the company could go bankrupt if the money collected was not correct. 

3. No, you can't see right away what the code does. You have to read more in-depth to figure out what the code is actually doing. I would name the function and variables to give more information. 

FUNCTION convertTemperature(temp, unit)
   IF unit = "F" THEN 
      SET convertedTemp to (tempâˆ’32) * (5/9)
      PRINT convertedTemp
   ELSE IF unit = "C" THEN 
      SET convertedTemp to temp * 1.8000 + 32.00  
      PRINT convertedTemp                     
   END IF
END FUNCTION

4. I think that the code is pretty clean. The function name could come across a little vague so if I wanted to be nick picky I would write out the function name as calculatePercentage.

5. 
a.
FUNCTION calculateTotal(subTotal, discountRate)
   PRINT "Your total due is: " + subTotal * discountRate + (subTotal * tax)
END FUNCTION

FUNCTION finalizePayment(amount, paymentType)
   IF paymentType = 'CASH' THEN
      PRINT "Change due: " + amount - calculateTotal
   ELSE IF paymentType = 'CREDIT CARD' THEN
      PRINT "Your credit card has been charged: " + calculateTotal
   END IF
END FUNCTION

b.
FUNCTION checkoutBook(book, guest)
   IF guest.accountActive AND guest.outstandingFees = 0 AND guest.hasOverdueBooks is false THEN
      APPEND book to guest.books
      SET book.status to "Checked Out"
      PRINT "Your books have been issued."
   ELSE
      PRINT "Unable to check out book."
   END IF
END FUNCTION

c.
CLASS bankAccount
   FUNCTION displayBalance
      PRINT balance
   END FUNCTION

   FUNCTION deposit(amount)
      SET balance to balance + amount
   END FUNCTION

   FUNCTION withdraw(amount)
      IF balance > amount THEN
         SET balance to balance - amount
      END 
   END FUNCTION
END CLASS

CLASS bankOffer
   FUNCTION creditCardOffer
      IF NOT(customer.hasCreditCard) THEN
         CALL offerCreditCard
      END 
   END FUNCTION
END CLASS

CLASS status
   FUNCTION checkStatus
      IF NOT(customer.hasCheckingAccount) THEN
         CALL offerCheckingAccount
      END 
 END FUNCTION
END CLASS

Programming Questions
6.Square: Given an array of integers, find out whether the sum of the integers is a perfect square. If it is a perfect square, return the square root, otherwise return the sum.

function isPerfectSquare(array) {
   let sum = 0
   for( i=0; i < array.length; i++){
      sum+= array[i]
   }
   if (sum % Math.sqrt(sum) === 0) {
      return(Math.sqrt(sum));
   } else {
      return sum;
   }
}

7. Duplicate: Given an array of integers, find out whether the array contains any duplicate elements. The function should return true if any value appears at least twice in the array, and false if every element is distinct.

function findDuplicate (array) {
    var counts = [];
    for(var i = 0; i <= array.length; i++) {
        if(counts[array[i]] === undefined) {
            counts[array[i]] = 1;
        } else {
            return true;
        }
    }
    return false;
}

Extra Credit
8. Anagram An anagram is a word, phrase, or name formed by rearranging the letters of another word. For example, spar can be formed from rasp. Given two strings, stringOne and stringTwo, determine if stringOne is an anagram of stringTwo. Assume that the strings contain only lowercase letters and do not worry about case-sensitivity. Hint: Your first task will be to convert the strings to arrays.

function isAnagram(string1, string2){

   let sort1 = string1.split('').sort();
   let sort2 = string2.split('').sort();
   let isSameLetter = false;

   for (i=0; i<sort1.length; i++){
      if (sort1.length === sort2.length){
         if (sort1[i] === sort2[i]){
         isSameLetter = true;
         }
      }
   }
   if (isSameLetter === false){
      return false;
   }
   else {
      return true;
   }
}